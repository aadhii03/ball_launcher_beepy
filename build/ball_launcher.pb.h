// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ball_launcher.proto

#ifndef PROTOBUF_INCLUDED_ball_5flauncher_2eproto
#define PROTOBUF_INCLUDED_ball_5flauncher_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ball_5flauncher_2eproto 

namespace protobuf_ball_5flauncher_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ball_5flauncher_2eproto
namespace ball_launcher {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Request_State;
class Request_StateDefaultTypeInternal;
extern Request_StateDefaultTypeInternal _Request_State_default_instance_;
}  // namespace ball_launcher
namespace google {
namespace protobuf {
template<> ::ball_launcher::Request* Arena::CreateMaybeMessage<::ball_launcher::Request>(Arena*);
template<> ::ball_launcher::Request_State* Arena::CreateMaybeMessage<::ball_launcher::Request_State>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ball_launcher {

enum Request_RequestType {
  Request_RequestType_SET_STATE = 0,
  Request_RequestType_LAUNCH_BALL = 1
};
bool Request_RequestType_IsValid(int value);
const Request_RequestType Request_RequestType_RequestType_MIN = Request_RequestType_SET_STATE;
const Request_RequestType Request_RequestType_RequestType_MAX = Request_RequestType_LAUNCH_BALL;
const int Request_RequestType_RequestType_ARRAYSIZE = Request_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor();
inline const ::std::string& Request_RequestType_Name(Request_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_RequestType_descriptor(), value);
}
inline bool Request_RequestType_Parse(
    const ::std::string& name, Request_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_RequestType>(
    Request_RequestType_descriptor(), name, value);
}
// ===================================================================

class Request_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ball_launcher.Request.State) */ {
 public:
  Request_State();
  virtual ~Request_State();

  Request_State(const Request_State& from);

  inline Request_State& operator=(const Request_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_State(Request_State&& from) noexcept
    : Request_State() {
    *this = ::std::move(from);
  }

  inline Request_State& operator=(Request_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_State* internal_default_instance() {
    return reinterpret_cast<const Request_State*>(
               &_Request_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request_State* other);
  friend void swap(Request_State& a, Request_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_State* New() const final {
    return CreateMaybeMessage<Request_State>(NULL);
  }

  Request_State* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_State>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_State& from);
  void MergeFrom(const Request_State& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float top_ang_vel = 3 [default = 0];
  bool has_top_ang_vel() const;
  void clear_top_ang_vel();
  static const int kTopAngVelFieldNumber = 3;
  float top_ang_vel() const;
  void set_top_ang_vel(float value);

  // optional float bottom_ang_vel = 4 [default = 0];
  bool has_bottom_ang_vel() const;
  void clear_bottom_ang_vel();
  static const int kBottomAngVelFieldNumber = 4;
  float bottom_ang_vel() const;
  void set_bottom_ang_vel(float value);

  // optional float phi = 1 [default = 0.5];
  bool has_phi() const;
  void clear_phi();
  static const int kPhiFieldNumber = 1;
  float phi() const;
  void set_phi(float value);

  // optional float theta = 2 [default = 0.5];
  bool has_theta() const;
  void clear_theta();
  static const int kThetaFieldNumber = 2;
  float theta() const;
  void set_theta(float value);

  // @@protoc_insertion_point(class_scope:ball_launcher.Request.State)
 private:
  void set_has_phi();
  void clear_has_phi();
  void set_has_theta();
  void clear_has_theta();
  void set_has_top_ang_vel();
  void clear_has_top_ang_vel();
  void set_has_bottom_ang_vel();
  void clear_has_bottom_ang_vel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float top_ang_vel_;
  float bottom_ang_vel_;
  float phi_;
  float theta_;
  friend struct ::protobuf_ball_5flauncher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ball_launcher.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Request_State State;

  typedef Request_RequestType RequestType;
  static const RequestType SET_STATE =
    Request_RequestType_SET_STATE;
  static const RequestType LAUNCH_BALL =
    Request_RequestType_LAUNCH_BALL;
  static inline bool RequestType_IsValid(int value) {
    return Request_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    Request_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    Request_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    Request_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return Request_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return Request_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return Request_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ball_launcher.Request.State state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::ball_launcher::Request_State& _internal_state() const;
  public:
  const ::ball_launcher::Request_State& state() const;
  ::ball_launcher::Request_State* release_state();
  ::ball_launcher::Request_State* mutable_state();
  void set_allocated_state(::ball_launcher::Request_State* state);

  // required .ball_launcher.Request.RequestType request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  ::ball_launcher::Request_RequestType request() const;
  void set_request(::ball_launcher::Request_RequestType value);

  // @@protoc_insertion_point(class_scope:ball_launcher.Request)
 private:
  void set_has_request();
  void clear_has_request();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ball_launcher::Request_State* state_;
  int request_;
  friend struct ::protobuf_ball_5flauncher_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request_State

// optional float phi = 1 [default = 0.5];
inline bool Request_State::has_phi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_State::set_has_phi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_State::clear_has_phi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_State::clear_phi() {
  phi_ = 0.5f;
  clear_has_phi();
}
inline float Request_State::phi() const {
  // @@protoc_insertion_point(field_get:ball_launcher.Request.State.phi)
  return phi_;
}
inline void Request_State::set_phi(float value) {
  set_has_phi();
  phi_ = value;
  // @@protoc_insertion_point(field_set:ball_launcher.Request.State.phi)
}

// optional float theta = 2 [default = 0.5];
inline bool Request_State::has_theta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_State::set_has_theta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_State::clear_has_theta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_State::clear_theta() {
  theta_ = 0.5f;
  clear_has_theta();
}
inline float Request_State::theta() const {
  // @@protoc_insertion_point(field_get:ball_launcher.Request.State.theta)
  return theta_;
}
inline void Request_State::set_theta(float value) {
  set_has_theta();
  theta_ = value;
  // @@protoc_insertion_point(field_set:ball_launcher.Request.State.theta)
}

// optional float top_ang_vel = 3 [default = 0];
inline bool Request_State::has_top_ang_vel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_State::set_has_top_ang_vel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_State::clear_has_top_ang_vel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_State::clear_top_ang_vel() {
  top_ang_vel_ = 0;
  clear_has_top_ang_vel();
}
inline float Request_State::top_ang_vel() const {
  // @@protoc_insertion_point(field_get:ball_launcher.Request.State.top_ang_vel)
  return top_ang_vel_;
}
inline void Request_State::set_top_ang_vel(float value) {
  set_has_top_ang_vel();
  top_ang_vel_ = value;
  // @@protoc_insertion_point(field_set:ball_launcher.Request.State.top_ang_vel)
}

// optional float bottom_ang_vel = 4 [default = 0];
inline bool Request_State::has_bottom_ang_vel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_State::set_has_bottom_ang_vel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_State::clear_has_bottom_ang_vel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_State::clear_bottom_ang_vel() {
  bottom_ang_vel_ = 0;
  clear_has_bottom_ang_vel();
}
inline float Request_State::bottom_ang_vel() const {
  // @@protoc_insertion_point(field_get:ball_launcher.Request.State.bottom_ang_vel)
  return bottom_ang_vel_;
}
inline void Request_State::set_bottom_ang_vel(float value) {
  set_has_bottom_ang_vel();
  bottom_ang_vel_ = value;
  // @@protoc_insertion_point(field_set:ball_launcher.Request.State.bottom_ang_vel)
}

// -------------------------------------------------------------------

// Request

// required .ball_launcher.Request.RequestType request = 1;
inline bool Request::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_request() {
  request_ = 0;
  clear_has_request();
}
inline ::ball_launcher::Request_RequestType Request::request() const {
  // @@protoc_insertion_point(field_get:ball_launcher.Request.request)
  return static_cast< ::ball_launcher::Request_RequestType >(request_);
}
inline void Request::set_request(::ball_launcher::Request_RequestType value) {
  assert(::ball_launcher::Request_RequestType_IsValid(value));
  set_has_request();
  request_ = value;
  // @@protoc_insertion_point(field_set:ball_launcher.Request.request)
}

// optional .ball_launcher.Request.State state = 2;
inline bool Request::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::ball_launcher::Request_State& Request::_internal_state() const {
  return *state_;
}
inline const ::ball_launcher::Request_State& Request::state() const {
  const ::ball_launcher::Request_State* p = state_;
  // @@protoc_insertion_point(field_get:ball_launcher.Request.state)
  return p != NULL ? *p : *reinterpret_cast<const ::ball_launcher::Request_State*>(
      &::ball_launcher::_Request_State_default_instance_);
}
inline ::ball_launcher::Request_State* Request::release_state() {
  // @@protoc_insertion_point(field_release:ball_launcher.Request.state)
  clear_has_state();
  ::ball_launcher::Request_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::ball_launcher::Request_State* Request::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::ball_launcher::Request_State>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ball_launcher.Request.state)
  return state_;
}
inline void Request::set_allocated_state(::ball_launcher::Request_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:ball_launcher.Request.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ball_launcher

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ball_launcher::Request_RequestType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ball_launcher::Request_RequestType>() {
  return ::ball_launcher::Request_RequestType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ball_5flauncher_2eproto
