// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ball_launcher.proto

#include "ball_launcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ball_5flauncher_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ball_5flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_State;
}  // namespace protobuf_ball_5flauncher_2eproto
namespace ball_launcher {
class Request_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_State>
      _instance;
} _Request_State_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
}  // namespace ball_launcher
namespace protobuf_ball_5flauncher_2eproto {
static void InitDefaultsRequest_State() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ball_launcher::_Request_State_default_instance_;
    new (ptr) ::ball_launcher::Request_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ball_launcher::Request_State::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_State =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_State}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ball_launcher::_Request_default_instance_;
    new (ptr) ::ball_launcher::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ball_launcher::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequest}, {
      &protobuf_ball_5flauncher_2eproto::scc_info_Request_State.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request_State.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, phi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, top_ang_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request_State, bottom_ang_vel_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ball_launcher::Request, state_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ball_launcher::Request_State)},
  { 13, 20, sizeof(::ball_launcher::Request)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ball_launcher::_Request_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ball_launcher::_Request_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ball_launcher.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023ball_launcher.proto\022\rball_launcher\"\374\001\n"
      "\007Request\0223\n\007request\030\001 \002(\0162\".ball_launche"
      "r.Request.RequestType\022+\n\005state\030\002 \001(\0132\034.b"
      "all_launcher.Request.State\032`\n\005State\022\020\n\003p"
      "hi\030\001 \001(\002:\0030.5\022\022\n\005theta\030\002 \001(\002:\0030.5\022\026\n\013top"
      "_ang_vel\030\003 \001(\002:\0010\022\031\n\016bottom_ang_vel\030\004 \001("
      "\002:\0010\"-\n\013RequestType\022\r\n\tSET_STATE\020\000\022\017\n\013LA"
      "UNCH_BALL\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ball_launcher.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ball_5flauncher_2eproto
namespace ball_launcher {
const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor() {
  protobuf_ball_5flauncher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ball_5flauncher_2eproto::file_level_enum_descriptors[0];
}
bool Request_RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_RequestType Request::SET_STATE;
const Request_RequestType Request::LAUNCH_BALL;
const Request_RequestType Request::RequestType_MIN;
const Request_RequestType Request::RequestType_MAX;
const int Request::RequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Request_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_State::kPhiFieldNumber;
const int Request_State::kThetaFieldNumber;
const int Request_State::kTopAngVelFieldNumber;
const int Request_State::kBottomAngVelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_State::Request_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ball_5flauncher_2eproto::scc_info_Request_State.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ball_launcher.Request.State)
}
Request_State::Request_State(const Request_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&top_ang_vel_, &from.top_ang_vel_,
    static_cast<size_t>(reinterpret_cast<char*>(&theta_) -
    reinterpret_cast<char*>(&top_ang_vel_)) + sizeof(theta_));
  // @@protoc_insertion_point(copy_constructor:ball_launcher.Request.State)
}

void Request_State::SharedCtor() {
  ::memset(&top_ang_vel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_ang_vel_) -
      reinterpret_cast<char*>(&top_ang_vel_)) + sizeof(bottom_ang_vel_));
  phi_ = 0.5f;
  theta_ = 0.5f;
}

Request_State::~Request_State() {
  // @@protoc_insertion_point(destructor:ball_launcher.Request.State)
  SharedDtor();
}

void Request_State::SharedDtor() {
}

void Request_State::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_State::descriptor() {
  ::protobuf_ball_5flauncher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ball_5flauncher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_State& Request_State::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ball_5flauncher_2eproto::scc_info_Request_State.base);
  return *internal_default_instance();
}


void Request_State::Clear() {
// @@protoc_insertion_point(message_clear_start:ball_launcher.Request.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&top_ang_vel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bottom_ang_vel_) -
        reinterpret_cast<char*>(&top_ang_vel_)) + sizeof(bottom_ang_vel_));
    phi_ = 0.5f;
    theta_ = 0.5f;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ball_launcher.Request.State)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float phi = 1 [default = 0.5];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_phi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &phi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float theta = 2 [default = 0.5];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_theta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float top_ang_vel = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_top_ang_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &top_ang_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float bottom_ang_vel = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_bottom_ang_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bottom_ang_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ball_launcher.Request.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ball_launcher.Request.State)
  return false;
#undef DO_
}

void Request_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ball_launcher.Request.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float phi = 1 [default = 0.5];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->phi(), output);
  }

  // optional float theta = 2 [default = 0.5];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->theta(), output);
  }

  // optional float top_ang_vel = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->top_ang_vel(), output);
  }

  // optional float bottom_ang_vel = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->bottom_ang_vel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ball_launcher.Request.State)
}

::google::protobuf::uint8* Request_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ball_launcher.Request.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float phi = 1 [default = 0.5];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->phi(), target);
  }

  // optional float theta = 2 [default = 0.5];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->theta(), target);
  }

  // optional float top_ang_vel = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->top_ang_vel(), target);
  }

  // optional float bottom_ang_vel = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->bottom_ang_vel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ball_launcher.Request.State)
  return target;
}

size_t Request_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ball_launcher.Request.State)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float top_ang_vel = 3 [default = 0];
    if (has_top_ang_vel()) {
      total_size += 1 + 4;
    }

    // optional float bottom_ang_vel = 4 [default = 0];
    if (has_bottom_ang_vel()) {
      total_size += 1 + 4;
    }

    // optional float phi = 1 [default = 0.5];
    if (has_phi()) {
      total_size += 1 + 4;
    }

    // optional float theta = 2 [default = 0.5];
    if (has_theta()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ball_launcher.Request.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ball_launcher.Request.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ball_launcher.Request.State)
    MergeFrom(*source);
  }
}

void Request_State::MergeFrom(const Request_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ball_launcher.Request.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      top_ang_vel_ = from.top_ang_vel_;
    }
    if (cached_has_bits & 0x00000002u) {
      bottom_ang_vel_ = from.bottom_ang_vel_;
    }
    if (cached_has_bits & 0x00000004u) {
      phi_ = from.phi_;
    }
    if (cached_has_bits & 0x00000008u) {
      theta_ = from.theta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ball_launcher.Request.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_State::CopyFrom(const Request_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ball_launcher.Request.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_State::IsInitialized() const {
  return true;
}

void Request_State::Swap(Request_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_State::InternalSwap(Request_State* other) {
  using std::swap;
  swap(top_ang_vel_, other->top_ang_vel_);
  swap(bottom_ang_vel_, other->bottom_ang_vel_);
  swap(phi_, other->phi_);
  swap(theta_, other->theta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_State::GetMetadata() const {
  protobuf_ball_5flauncher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ball_5flauncher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::ball_launcher::_Request_default_instance_._instance.get_mutable()->state_ = const_cast< ::ball_launcher::Request_State*>(
      ::ball_launcher::Request_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kRequestFieldNumber;
const int Request::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ball_5flauncher_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ball_launcher.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::ball_launcher::Request_State(*from.state_);
  } else {
    state_ = NULL;
  }
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:ball_launcher.Request)
}

void Request::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_) -
      reinterpret_cast<char*>(&state_)) + sizeof(request_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:ball_launcher.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_ball_5flauncher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ball_5flauncher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ball_5flauncher_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ball_launcher.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != NULL);
    state_->Clear();
  }
  request_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ball_launcher.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ball_launcher.Request.RequestType request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ball_launcher::Request_RequestType_IsValid(value)) {
            set_request(static_cast< ::ball_launcher::Request_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ball_launcher.Request.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ball_launcher.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ball_launcher.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ball_launcher.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ball_launcher.Request.RequestType request = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->request(), output);
  }

  // optional .ball_launcher.Request.State state = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ball_launcher.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ball_launcher.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ball_launcher.Request.RequestType request = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->request(), target);
  }

  // optional .ball_launcher.Request.State state = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ball_launcher.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ball_launcher.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ball_launcher.Request.RequestType request = 1;
  if (has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request());
  }
  // optional .ball_launcher.Request.State state = 2;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ball_launcher.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ball_launcher.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ball_launcher.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ball_launcher.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_state()->::ball_launcher::Request_State::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000002u) {
      request_ = from.request_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ball_launcher.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ball_launcher.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(request_, other->request_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_ball_5flauncher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ball_5flauncher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ball_launcher
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ball_launcher::Request_State* Arena::CreateMaybeMessage< ::ball_launcher::Request_State >(Arena* arena) {
  return Arena::CreateInternal< ::ball_launcher::Request_State >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ball_launcher::Request* Arena::CreateMaybeMessage< ::ball_launcher::Request >(Arena* arena) {
  return Arena::CreateInternal< ::ball_launcher::Request >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
